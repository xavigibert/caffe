name: "Amtrak_Dual"
# Texture data source
layer {
  name: "data_t"
  type: "Data"
  top: "data_t"
  top: "label_t"
  data_param {
    source: "data/amtrak/db_text_train_lmdb"
    source_map: "data/amtrak/split0-images-idx3-ubyte"
    source_map: "data/amtrak/split1-images-idx3-ubyte"
    source_map: "data/amtrak/split2-images-idx3-ubyte"
    source_map: "data/amtrak/split3-images-idx3-ubyte"
    source_map: "data/amtrak/split4-images-idx3-ubyte"
    backend: LMDB_FILE
    batch_size: 128
  }
  transform_param {
    scale: 0.00390625
    crop_size: 75
    mean_value: 96
    mirror: true
    mirror_v: true
  }
  include: { phase: TRAIN }
}
layer {
  name: "data_t"
  type: "Data"
  top: "data_t"
  top: "label_t"
  data_param {
    source: "data/amtrak/db_text_test_lmdb"
    source_map: "data/amtrak/split0-images-idx3-ubyte"
    source_map: "data/amtrak/split1-images-idx3-ubyte"
    source_map: "data/amtrak/split2-images-idx3-ubyte"
    source_map: "data/amtrak/split3-images-idx3-ubyte"
    source_map: "data/amtrak/split4-images-idx3-ubyte"
    backend: LMDB_FILE
    batch_size: 80
  }
  transform_param {
    scale: 0.00390625
    crop_size: 75
    mean_value: 96
    mirror: false
  }
  include: { phase: TEST }
}
# Fasteners data source
layer {
  name: "data_f"
  type: "Data"
  top: "data_f"
  top: "label_f"
  data_param {
    source: "data/amtrak/db_fast_train_lmdb"
    source_map: "data/amtrak/fast0-images-idx3-ubyte"
    source_map: "data/amtrak/fast1-images-idx3-ubyte"
    source_map: "data/amtrak/fast2-images-idx3-ubyte"
    source_map: "data/amtrak/fast3-images-idx3-ubyte"
    source_map: "data/amtrak/fast4-images-idx3-ubyte"
    backend: LMDB_FILE
    batch_size: 16
  }
  transform_param {
    scale: 0.00390625
    crop_size: 182
    mean_value: 96
    mirror: false
    mirror_v: false
  }
  include: { phase: TRAIN }
}
layer {
  name: "data_f"
  type: "Data"
  top: "data_f"
  top: "label_f"
  data_param {
    source: "data/amtrak/db_fast_test_lmdb"
    source_map: "data/amtrak/fast0-images-idx3-ubyte"
    source_map: "data/amtrak/fast1-images-idx3-ubyte"
    source_map: "data/amtrak/fast2-images-idx3-ubyte"
    source_map: "data/amtrak/fast3-images-idx3-ubyte"
    source_map: "data/amtrak/fast4-images-idx3-ubyte"
    backend: LMDB_FILE
    batch_size: 20
  }
  transform_param {
    scale: 0.00390625
    crop_size: 182
    mean_value: 96
    mirror: false
  }
  include: { phase: TEST }
}
# Texture network
layer {
  name: "conv1_t"
  type: "Convolution"
  bottom: "data_t"
  top: "conv1_t"
  param {
    name: "conv1_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv1_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 48
    kernel_size: 9
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool1_t"
  type: "Pooling"
  bottom: "conv1_t"
  top: "pool1_t"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm1_t"
  type: "LRN"
  bottom: "pool1_t"
  top: "norm1_t"
  lrn_param {
    local_size: 5
    alpha: 0.001
    beta: 0.5
    norm_region: WITHIN_CHANNEL
  }
}
layer {
  name: "conv2_t"
  type: "Convolution"
  bottom: "norm1_t"
  top: "conv2_t"
  param {
    name: "conv2_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv2_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu2_t"
  type: "ReLU"
  bottom: "conv2_t"
  top: "conv2_t"
}
layer {
  name: "pool2_t"
  type: "Pooling"
  bottom: "conv2_t"
  top: "pool2_t"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "conv3_t"
  type: "Convolution"
  bottom: "pool2_t"
  top: "conv3_t"
  param {
    name: "conv3_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv3_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    kernel_size: 5
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "drop3_t"
  type: "Dropout"
  bottom: "conv3_t"
  top: "conv3_t"
  dropout_param {
    dropout_ratio: 0.1
  }
}
layer {
  name: "relu3_t"
  type: "ReLU"
  bottom: "conv3_t"
  top: "conv3_t"
}
layer {
  name: "pool3_t"
  type: "Pooling"
  bottom: "conv3_t"
  top: "pool3_t"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "ip4_t"
  type: "Convolution"
  bottom: "pool3_t"
  top: "ip4_t"
  param {
    lr_mult: 2
    decay_mult: 2
  }
  param {
    lr_mult: 4
    decay_mult: 0
  }
  convolution_param {
    num_output: 10
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "accuracy_t"
  type: "Accuracy"
  bottom: "ip4_t"
  bottom: "label_t"
  top: "accuracy_t"
  include: { phase: TEST }
}
layer {
  name: "loss_t"
  type: "SoftmaxWithLoss"
  bottom: "ip4_t"
  bottom: "label_t"
  top: "loss_t"
}
# Fasteners network
layer {
  name: "conv1_f"
  type: "Convolution"
  bottom: "data_f"
  top: "conv1_f"
  param {
    name: "conv1_w"
    lr_mult: 1
    lr_pre_mult: 0.5
    decay_mult: 1
  }
  param {
    name: "conv1_b"
    lr_mult: 2
    lr_pre_mult: 0.5
    decay_mult: 0
  }
  convolution_param {
    num_output: 48
    kernel_size: 9
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool1_f"
  type: "Pooling"
  bottom: "conv1_f"
  top: "pool1_f"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm1_f"
  type: "LRN"
  bottom: "pool1_f"
  top: "norm1_f"
  lrn_param {
    local_size: 5
    alpha: 0.001
    beta: 0.5
    norm_region: WITHIN_CHANNEL
  }
}
layer {
  name: "conv2_f"
  type: "Convolution"
  bottom: "norm1_f"
  top: "conv2_f"
  param {
    name: "conv2_w"
    lr_mult: 1
    lr_pre_mult: 0.5
    decay_mult: 1
  }
  param {
    name: "conv2_b"
    lr_mult: 2
    lr_pre_mult: 0.5
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu2_f"
  type: "ReLU"
  bottom: "conv2_f"
  top: "conv2_f"
}
layer {
  name: "pool2_f"
  type: "Pooling"
  bottom: "conv2_f"
  top: "pool2_f"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "conv3_f"
  type: "Convolution"
  bottom: "pool2_f"
  top: "conv3_f"
  param {
    name: "conv3_w"
    lr_mult: 1
    lr_pre_mult: 0.5
    decay_mult: 1
  }
  param {
    name: "conv3_b"
    lr_mult: 2
    lr_pre_mult: 0.5
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    kernel_size: 5
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu3_f"
  type: "ReLU"
  bottom: "conv3_f"
  top: "conv3_f"
}
layer {
  name: "drop3_f"
  type: "Dropout"
  bottom: "conv3_f"
  top: "conv3_f"
  dropout_param {
    dropout_ratio: 0.1
  }
}
layer {
  name: "pool3_f"
  type: "Pooling"
  bottom: "conv3_f"
  top: "pool3_f"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "conv4_f"
  type: "Convolution"
  bottom: "pool3_f"
  top: "conv4_f"
  param {
    name: "conv4_w"
    lr_mult: 1
    decay_mult: 10
  }
  param {
    name: "conv4_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    kernel_size: 5
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu4_f"
  type: "ReLU"
  bottom: "conv4_f"
  top: "conv4_f"
}
layer {
  name: "drop4_f"
  type: "Dropout"
  bottom: "conv4_f"
  top: "conv4_f"
  dropout_param {
    dropout_ratio: 0.2
  }
}
layer {
  name: "pool4_f"
  type: "Pooling"
  bottom: "conv4_f"
  top: "pool4_f"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "ip5_f"
  type: "Convolution"
  bottom: "pool4_f"
  top: "ip5_f"
  param {
    lr_mult: 1
    decay_mult: 2
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 5
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "accuracy_f"
  type: "Accuracy"
  bottom: "ip5_f"
  bottom: "label_f"
  top: "accuracy_f"
  include: { phase: TEST }
}
layer {
  name: "loss_f"
  type: "SoftmaxWithLoss"
  bottom: "ip5_f"
  bottom: "label_f"
  top: "loss_f"
}
