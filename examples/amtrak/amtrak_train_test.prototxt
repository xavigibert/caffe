name: "Amtrak"
layers {
  name: "data"
  type: DATA
  top: "data"
  top: "label"
  data_param {
    source: "examples/amtrak/amtrak_train_leveldb"
    source_map: "data/amtrak/split0-images-idx3-ubyte"
    source_map: "data/amtrak/split1-images-idx3-ubyte"
    source_map: "data/amtrak/split2-images-idx3-ubyte"
    source_map: "data/amtrak/split3-images-idx3-ubyte"
    source_map: "data/amtrak/split4-images-idx3-ubyte"
    backend: LEVELDB_FILE
    batch_size: 64
  }
  transform_param {
    scale: 0.00390625
    mean_file: "examples/amtrak/average_image.binaryproto"
    crop_size: 75
    mirror: true
    mirror_v: true
  }
  include: { phase: TRAIN }
}
layers {
  name: "data"
  type: DATA
  top: "data"
  top: "label"
  data_param {
    source: "examples/amtrak/amtrak_test_leveldb"
    source_map: "data/amtrak/split0-images-idx3-ubyte"
    source_map: "data/amtrak/split1-images-idx3-ubyte"
    source_map: "data/amtrak/split2-images-idx3-ubyte"
    source_map: "data/amtrak/split3-images-idx3-ubyte"
    source_map: "data/amtrak/split4-images-idx3-ubyte"
    backend: LEVELDB_FILE
    batch_size: 100
  }
  transform_param {
    scale: 0.00390625
    mean_file: "examples/amtrak/average_image.binaryproto"
    crop_size: 75
    mirror: false
  }
  include: { phase: TEST }
}
layers {
  name: "conv1"
  type: CONVOLUTION
  bottom: "data"
  top: "conv1"
  blobs_lr: 1
  blobs_lr: 2
  weight_decay: 1
  weight_decay: 0
  convolution_param {
    num_output: 32
    kernel_size: 9
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layers {
  name: "pool1"
  type: POOLING
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layers {
  name: "conv2"
  type: CONVOLUTION
  bottom: "pool1"
  top: "conv2"
  blobs_lr: 1
  blobs_lr: 2
  weight_decay: 1
  weight_decay: 0
  convolution_param {
    num_output: 48
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layers {
  name: "relu2"
  type: RELU
  bottom: "conv2"
  top: "conv2"
}
layers {
  name: "pool2"
  type: POOLING
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layers {
  name: "ip1"
  type: CONVOLUTION
  bottom: "pool2"
  top: "ip1"
  blobs_lr: 1
  blobs_lr: 2
  convolution_param {
    num_output: 200
    kernel_size: 5
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layers {
  name: "relu1"
  type: RELU
  bottom: "ip1"
  top: "ip1"
}
#layers {
#  name: "drop1"
#  type: DROPOUT
#  bottom: "ip1"
#  top: "ip1"
#  dropout_param {
#    dropout_ratio: 0.5
#  }
#}
layers {
  name: "pool3"
  type: POOLING
  bottom: "ip1"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 3
  }
}
layers {
  name: "ip2"
  type: CONVOLUTION
  bottom: "pool3"
  top: "ip2"
  blobs_lr: 1
  blobs_lr: 2
  weight_decay: 1
  weight_decay: 0
  convolution_param {
    num_output: 9
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layers {
  name: "accuracy"
  type: ACCURACY
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include: { phase: TEST }
}
layers {
  name: "loss"
  type: SOFTMAX_LOSS
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
